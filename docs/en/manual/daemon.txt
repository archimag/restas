.. _manual-daemon:

Daemonization
=============

Most Common Lisp implementations rely on being run from a terminal -
when the standard input stream is closed, the Lisp process will
terminate.

Deploying a Common Lisp application on GNU/Linux servers poses the
problem of creating a Lisp daemon process.

There are several very inconvenient and unreliable methods for solving this problem
(see `swank-daemon`_ and `detachtty`_). But for deploying `RESTAS`_-based
web applications using `SBCL`_ under GNU/Linux, there is a simple and convenient
tool: `restas-daemon.lisp`_ script, which is placed in 'contrib' directory
of RESTAS package. With this script, you can quite simply make a daemon process:
::

  sbcl --load /path/to/restas/contrib/restas-daemon.lisp /path/to/daemon.conf COMMAND

As you see, the script accepts two parameters: path to the daemon configuration file
and a command name. Following commands are supported:

* **start** - launching

* **stop** - stopping

* **restart** - restart

* **kill** - kill the daemon, if it somehow doesn't want to halt with 'stop'.

* **zap** - remove the PID file

* **nodaemon** - basically the same, as 'start' (including permissions change etc.),
  but during this the process doesn't fork itself and doesn't disconnect from
  the terminal. This gives you the ability to examine its output and is handy
  for debugging.

The daemon configuration file can contain definitions for several variables altering
daemon behaviour. Here is the full config of my home daemon:

.. code-block:: common-lisp

  (defparameter *name* "homesite")

  (defparameter *user* "andrey")

  (defparameter *swankport* 9000)

  (defparameter *asdf-central-registry*
   '(#P"/usr/share/common-lisp/systems/" #P"/home/andrey/development/common-lisp/systems/"))

  (defparameter *asdf-load-systems* '(#:homesite))

  (defparameter *sites*  '((#:homesite nil 80)))

The following parameters are possible:

* :var:`*name*` - daemon name, the only required parameter now.

* :var:`*user*` - name of a user to be owner of the daemon, by default it is the
  same as daemon name.

* :var:`*group*` - user group

* :var:`*fasldir*` - path to a directory for putting fasl files, by default
  is derived from daemon name as

  .. code-block:: common-lisp

    (format nil "/var/cache/~A/fasl/" *name*)

* :var:`*pidfile*` - daemon PID file, by default

  .. code-block:: common-lisp

    (format nil "/var/run/~A/~A.pid" *name* *name*)

* :var:`*swankport*` - port for starting swank, if it isn't supplied or nil,
  swank won't be started.

* :var:`*default-host-redirect*` - in `RESTAS`_ sites are started with
  :fun:`restas:start-site`, in this case you can supply a host name (virtual host analogue),
  this variable designates host for making a redirect if there is no site
  for requested host, e.g. you can get in `lisper.ru`_ by typing in a browser
  http://www.lisper.ru/, http://lisp.catap.ru/ or just the direct address, all such requests
  are redirected to `lisper.ru`_.

* :var:`*asdf-central-registry*` - list of directories for searching of systems.

* :var:`*asdf-load-systems*` - list of systems which are necessary to load when the daemon starts.

* :var:`*sites*` - list of sites to be loaded at daemon's startup with function
  :fun:`restas:start`. You can supply just a `RESTAS`_ module or a list containing
  module name, host name, and port as a site (if required SSL connection, must be
  4th parameter with SSL configurations, about it below). For example, site
  http://restas.lisper.ru and site `lisper.ru`_ are loaded in one process, and
  variable :var:`*sites*` is defined in daemon config as

  .. code-block:: common-lisp

    (defparameter *sites*
      '((#:rulisp "lisper.ru" 80)
        (#:rulisp.restas "restas.lisper.ru" 80)))

  When using safe connection, for lisper.ru site configs could be such:

  .. code-block:: common-lisp

    (defparameter *sites* 
      '((#:rulisp "lisper.ru" 443 ("/path/to/ssl_cert.cer" "/path/to/private.key" "your_pass"))
        (#:rulisp.restas "restas.lisper.ru" 80)))

  Unless a password is mandatory, you're free to omit the third
  element, "your_pass", from the SSL config list.

There is special support for Gentoo-based systems. During installation of `RESTAS`_ 
with `archimag-lisp-overlay`_ the script restas.lo is added to directory /etc/init.d/.
Now, for creation of initd script you can create a symlink to this file and create
configuration file in /etc/conf.d/, for example,
::

  cd /etc/init.d/
  ln -s restas.lo homesite
  emacs /etc/conf.d/homesite.conf
  /etc/init.d/homesite start

.. _RESTAS: http://restas.lisper.ru/
.. _swank-daemon: http://www.cliki.net/swank-daemon
.. _detachtty: http://www.cliki.net/detachtty
.. _restas-daemon.lisp: http://github.com/archimag/restas/blob/master/contrib/restas-daemon.lisp
.. _SBCL: http://www.sbcl.org/
.. _lisper.ru: http://lisper.ru/
.. _archimag-lisp-overlay: http://github.com/archimag/archimag-lisp-overlay
